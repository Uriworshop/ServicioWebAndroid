// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Practica4ParcialUYS.ServiCineSql {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    using System.Data;
    
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InsertarOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConsultarOperationCompleted;
        
        /// CodeRemarks
        public Service() {
            this.Url = "http://192.168.1.145:210/Service.asmx";
        }
        
        public Service(string url) {
            this.Url = url;
        }
        
        /// CodeRemarks
        public event InsertarCompletedEventHandler InsertarCompleted;
        
        /// CodeRemarks
        public event ConsultarCompletedEventHandler ConsultarCompleted;
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Insertar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Insertar(string Nombre, string Genero, string Clasificacion, string Duracion, string Director, string Actores, string Sinopsis, string Fecha) {
            object[] results = this.Invoke("Insertar", new object[] {
                        Nombre,
                        Genero,
                        Clasificacion,
                        Duracion,
                        Director,
                        Actores,
                        Sinopsis,
                        Fecha});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void InsertarAsync(string Nombre, string Genero, string Clasificacion, string Duracion, string Director, string Actores, string Sinopsis, string Fecha) {
            this.InsertarAsync(Nombre, Genero, Clasificacion, Duracion, Director, Actores, Sinopsis, Fecha, null);
        }
        
        /// CodeRemarks
        public void InsertarAsync(string Nombre, string Genero, string Clasificacion, string Duracion, string Director, string Actores, string Sinopsis, string Fecha, object userState) {
            if ((this.InsertarOperationCompleted == null)) {
                this.InsertarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertarOperationCompleted);
            }
            this.InvokeAsync("Insertar", new object[] {
                        Nombre,
                        Genero,
                        Clasificacion,
                        Duracion,
                        Director,
                        Actores,
                        Sinopsis,
                        Fecha}, this.InsertarOperationCompleted, userState);
        }
        
        private void OnInsertarOperationCompleted(object arg) {
            if ((this.InsertarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertarCompleted(this, new InsertarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Consultar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Consultar(string Nombre_Peli) {
            object[] results = this.Invoke("Consultar", new object[] {
                        Nombre_Peli});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// CodeRemarks
        public void ConsultarAsync(string Nombre_Peli) {
            this.ConsultarAsync(Nombre_Peli, null);
        }
        
        /// CodeRemarks
        public void ConsultarAsync(string Nombre_Peli, object userState) {
            if ((this.ConsultarOperationCompleted == null)) {
                this.ConsultarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConsultarOperationCompleted);
            }
            this.InvokeAsync("Consultar", new object[] {
                        Nombre_Peli}, this.ConsultarOperationCompleted, userState);
        }
        
        private void OnConsultarOperationCompleted(object arg) {
            if ((this.ConsultarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConsultarCompleted(this, new ConsultarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void InsertarCompletedEventHandler(object sender, InsertarCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void ConsultarCompletedEventHandler(object sender, ConsultarCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConsultarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConsultarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}
